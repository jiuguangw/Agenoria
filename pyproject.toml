# Copyright 2019 by Jiuguang Wang (www.robo.guru)
# All rights reserved.
# This file is part of Agenoria and is released under the MIT License.
# Please see the LICENSE file that should have been included as part of
# this package.

[project]
name = "agenoria"
version = "0.1.0"
description = "Python utility for visualizing growth data from a newborn's first year."
authors = [
    {name = "Jiuguang Wang", email="jw@robo.guru"}
]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10"

keywords = ["baby", "visualization", "glow", "pandas", "matplotlib"]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

dependencies = [
    "tomli>=2.0.1",
    "matplotlib>=3.7",
    "pandas>=1.5",
    "seaborn>=0.12.2",
    "numpy>=1.22",
    "chart_studio>=1.1.0",
    "toml>=0.10.2",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.1.1",
    "pytest>=7.2.1",
    "pytest-cov>=4.0.0",
    "MonkeyType>=23.3.0",
]

[project.scripts]
agenoria = "agenoria.__main__:main"

[project.urls]
homepage = "https://github.com/jiuguangw/Agenoria"
documentation = "https://github.com/jiuguangw/Agenoria"
repository = "https://github.com/jiuguangw/Agenoria"

[tool.setuptools]
packages = ["agenoria", "config", "data"]

[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), and import sorting (`I`)
select = ["E", "F", "I"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 79

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.black]
line-length = 79
target-version = ['py310']
include = '\.pyi?$'
# `extend-exclude` is not honored when `black` is passed a file path explicitly,
# as is typical when `black` is invoked via `pre-commit`.
force-exclude = '''
/(
  build/.*
)/
'''

preview = true

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
ignore_missing_imports = true
explicit_package_bases = true
check_untyped_defs = true
strict_equality = true
warn_unreachable = true
warn_redundant_casts = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "mypy-scripts.*"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "matplotlib.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "setuptools.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "scipy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pandas.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "seaborn.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "chart_studio.*"
ignore_missing_imports = true
